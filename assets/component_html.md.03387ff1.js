import{_ as s,c as n,o as a,a as o}from"./app.f8ac90c9.js";const t="/h-web/html&css/htmlLable.png",u=JSON.parse('{"title":"HTML5 新增内容","description":"","frontmatter":{},"headers":[{"level":2,"title":"HTML5 新增的内容有哪些？","slug":"html5-新增的内容有哪些","link":"#html5-新增的内容有哪些","children":[]},{"level":2,"title":"新增标签","slug":"新增标签","link":"#新增标签","children":[]},{"level":2,"title":"新增 API","slug":"新增-api","link":"#新增-api","children":[]}],"relativePath":"component/html.md"}'),l={name:"component/html.md"},e=o('<h1 id="html5-新增内容" tabindex="-1">HTML5 新增内容 <a class="header-anchor" href="#html5-新增内容" aria-hidden="true">#</a></h1><h2 id="html5-新增的内容有哪些" tabindex="-1">HTML5 新增的内容有哪些？ <a class="header-anchor" href="#html5-新增的内容有哪些" aria-hidden="true">#</a></h2><ul><li><p>新增的标签有：布局标签 xxxx、画布 xxx、音视频 xxx、新增 form 表单类型有 xxx、 同时也废弃了 big、font、s 等标签，在项目中使用 HTML5 规范进行开发对浏览器解析 HTML 代码更加友好，有利于网站的 SEO；</p></li><li><p>新增的 API 有：DOM 操作相关 xxx、历史记录 xxx、存储 xxx、文件读取、websocket 等。在实际应用中我使用 xxx API 实现过 xxx 功能，感觉 xxx 还是很强大的。</p></li></ul><h2 id="新增标签" tabindex="-1">新增标签 <a class="header-anchor" href="#新增标签" aria-hidden="true">#</a></h2><ol><li><strong>布局标签</strong></li></ol><blockquote><p><code>&lt;header&gt;</code> 标记定义一个页面或一个区域的头部</p><p><code>&lt;nav&gt;</code> 标记定义导航链接</p><p><code>&lt;section&gt;</code> 标记定义一个区域</p><p><code>&lt;aside&gt;</code> 标记定义页面内容部分的侧边栏</p><p><code>&lt;article&gt;</code> 标记定义一篇文章</p><p><code>&lt;hgroup&gt;</code> 标记定义文件中一个区块的相关信息</p><p><code>&lt;figure&gt;</code> 标记定义一组媒体内容以及它们的标题</p><p><code>&lt;figcaption&gt;</code> 标记定义 figure 元素的标题</p><p><code>&lt;dialog&gt;</code> 标记定义一个对话框(会话框)类似微信</p><p><code>&lt;footer&gt;</code> 标记定义一个页面或一个区域的底部</p></blockquote><details class="details custom-block"><summary>查看页面效果</summary><p><img src="'+t+`" alt="页面效果"></p></details><ol start="2"><li><strong>表单新增</strong>。新增的 <code>input</code> 的类型有：</li></ol><blockquote><p><code>email</code>：必须输入邮箱地址</p><p><code>url</code>：必须输入 url 地址</p><p><code>number</code>：必须输入数值</p><p><code>range</code>：必须输入一定范围内的数值</p><p><code>Date Pickers</code>：日期选择器</p><p><code>search</code> 搜索常规的文本域</p><p><code>color</code>：颜色选择</p></blockquote><ol start="3"><li><strong>canvas 画布</strong>，用来在网页上绘制图像的标签。</li><li><strong>video 视频标签</strong></li><li><strong>audio 音频标签</strong></li></ol><h2 id="新增-api" tabindex="-1">新增 API <a class="header-anchor" href="#新增-api" aria-hidden="true">#</a></h2><ol><li><p><strong>DOM 操作</strong></p><p>获取元素新增 querySelector 及 querySelectorAll</p><details class="details custom-block"><summary>基本使用</summary><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  &lt;</span><span style="color:var(--shiki-token-string-expression);">p</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">class</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;ptext&quot;</span><span style="color:var(--shiki-color-text);">&gt;标签&lt;/</span><span style="color:var(--shiki-token-string-expression);">p</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  &lt;</span><span style="color:var(--shiki-token-string-expression);">p</span><span style="color:var(--shiki-color-text);">&gt;标签&lt;/</span><span style="color:var(--shiki-token-string-expression);">p</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  &lt;</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ptext</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">document</span><span style="color:var(--shiki-token-function);">.querySelector</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;.ptext&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 查一个</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">allp</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">document</span><span style="color:var(--shiki-token-function);">.querySelectorAll</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;p&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 查全部</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  &lt;/</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span></code></pre></div></details><p>类名操作新增 add，remove，toggle，contains</p><details class="details custom-block"><summary>基本使用</summary><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">Node</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">classList</span><span style="color:var(--shiki-token-function);">.add</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;class&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">//添加class</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Node</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">classList</span><span style="color:var(--shiki-token-function);">.remove</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;class&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 移除class</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Node</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">classList</span><span style="color:var(--shiki-token-function);">.toggle</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;class&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">//切换class，有则移除，无则添加</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Node</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">classList</span><span style="color:var(--shiki-token-function);">.contains</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;class&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 检测是否存在class,有true,无false</span></span>
<span class="line"></span></code></pre></div></details></li><li><p><strong>历史记录 &amp; 缓存</strong></p><p><strong>历史记录 window.history</strong></p><div class="tip custom-block"><p class="custom-block-title">介绍</p><p>HTML5 提供了一组强大的 API 用来保存用户在一个会话期间的网站访问记录，并提供相 应的方法进行追溯（也就是模拟浏览器的前进后退）。</p><p>比较重要的 API 有 history.pushState 可以改变页面的 URL 而不会刷新页面， vue-router 及 react-router-dom 这种路由管理库的实现就是基于 history API 进 行 实现的。</p></div><ul><li>window.history.pushState(stateObj, title, url)——存储当前历史记录点</li></ul><blockquote><p>第一个参数 stateObj 是给 state 的值；</p><p>第二个参数 title 为页面的标题，但当前所有浏览器都忽略这个参数，传个空字符串 就好；</p><p>第三个参数 url 是你想要去的链接；</p></blockquote><ul><li><p>window.history.replaceState(stateObj, title, url)——替换当前历史记录点</p></li><li><p>popstate 事件——监听历史记录点</p></li></ul><details class="details custom-block"><summary>查看 pushState 案例</summary><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki css-variables has-highlighted-lines"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;!</span><span style="color:var(--shiki-token-string-expression);">DOCTYPE</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">html</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">html</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">lang</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;en&quot;</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  &lt;</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">ul</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      &lt;</span><span style="color:var(--shiki-token-string-expression);">li</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">a</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">href</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;/home&quot;</span><span style="color:var(--shiki-color-text);">&gt;首页&lt;/</span><span style="color:var(--shiki-token-string-expression);">a</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">a</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">href</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;/about&quot;</span><span style="color:var(--shiki-color-text);">&gt;关于我们&lt;/</span><span style="color:var(--shiki-token-string-expression);">a</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">id</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;routeView&quot;</span><span style="color:var(--shiki-color-text);">&gt;&lt;/</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      &lt;/</span><span style="color:var(--shiki-token-string-expression);">li</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">ul</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  &lt;/</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">html</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> routerView </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">document</span><span style="color:var(--shiki-token-function);">.querySelector</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;#routeView&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// 页面加载完毕立即执行一遍</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-constant);">window</span><span style="color:var(--shiki-token-function);">.addEventListener</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;DOMContentLoaded&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> onload);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// 监听url变化后执行</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-constant);">window</span><span style="color:var(--shiki-token-function);">.addEventListener</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;popstate&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">routerView</span><span style="color:var(--shiki-color-text);">.innerHTML </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">viewHTMl</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">location</span><span style="color:var(--shiki-color-text);">.pathname);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  });</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onload</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 第一次进入页面时渲染默认内容</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">routerView</span><span style="color:var(--shiki-color-text);">.innerHTML </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">viewHTMl</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">location</span><span style="color:var(--shiki-color-text);">.pathname);</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">var</span><span style="color:var(--shiki-color-text);"> linkList </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">document</span><span style="color:var(--shiki-token-function);">.querySelectorAll</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;a&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">linkList</span><span style="color:var(--shiki-token-function);">.forEach</span><span style="color:var(--shiki-color-text);">((el) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-constant);">el</span><span style="color:var(--shiki-token-function);">.addEventListener</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;click&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> (e) {</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-function);">.preventDefault</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 点击时，让浏览器url变为a链接种的内容</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">history</span><span style="color:var(--shiki-token-function);">.pushState</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">el</span><span style="color:var(--shiki-token-function);">.getAttribute</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;href&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">routerView</span><span style="color:var(--shiki-color-text);">.innerHTML </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">viewHTMl</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">location</span><span style="color:var(--shiki-color-text);">.pathname);</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">      });</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">    });</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// 根据url 渲染不同内容</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">viewHTMl</span><span style="color:var(--shiki-color-text);">(url) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">switch</span><span style="color:var(--shiki-color-text);"> (url) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">case</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/home&quot;</span><span style="color:var(--shiki-color-text);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">\`&lt;h1&gt;我是首页&lt;h1&gt;\`</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">break</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">case</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/about&quot;</span><span style="color:var(--shiki-color-text);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">\`&lt;h1&gt;我是关于我们页面&lt;h1&gt;\`</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">break</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-color-text);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">\`&lt;h1&gt;我是首页&lt;h1&gt;\`</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">break</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div></details><p><strong>缓存</strong></p><p>localStorage 和 sessionStorage</p></li><li><p><strong>文件读取</strong></p><p>FileReader 接口将文件读入内存，并提供相应的方法，来读取文件中的数据 ，FileReader 提供的方法和事件有：</p><div class="vp-table__container"><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>readAsText(file, [encoding])</td><td>将文件读取为文本 该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。</td></tr><tr><td>readAsBinaryString(file)</td><td>将文件读取二进制码 通常我们将它传送到后端，后端可以通过这段字符串存储文件</td></tr><tr><td>readAsDataURL(file)</td><td>将文件读取为 DataURL 将文件读取为一串 Data URL 字符串，将小文件以一种特殊格式的 URL 地址直接读入页面。小文件指图像与 html 等格式的文件。</td></tr><tr><td>abort</td><td>中断读取</td></tr></tbody></table></div><hr><div class="vp-table__container"><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>onabort</td><td>数据读取中断时触发</td></tr><tr><td>onerror</td><td>数据读取出错时触发</td></tr><tr><td>onloadstart</td><td>数据读取开始时触发</td></tr><tr><td>onload/onloadend</td><td>数据读取成功完成时触发/数据读取完成时触发，无论成功失败</td></tr></tbody></table></div><hr><details class="details custom-block"><summary>查看案例</summary><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki css-variables has-highlighted-lines"><code><span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">&lt;!</span><span style="color:var(--shiki-token-constant);">DOCTYPE</span><span style="color:var(--shiki-color-text);"> html</span><span style="color:var(--shiki-token-keyword);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> &lt;</span><span style="color:var(--shiki-token-string-expression);">html</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">lang</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;en&quot;</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">head</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     &lt;</span><span style="color:var(--shiki-token-string-expression);">meta</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">charset</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;UTF-8&quot;</span><span style="color:var(--shiki-color-text);"> /&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     &lt;</span><span style="color:var(--shiki-token-string-expression);">meta</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">http-equiv</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;X-UA-Compatible&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">content</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;IE=edge&quot;</span><span style="color:var(--shiki-color-text);"> /&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     &lt;</span><span style="color:var(--shiki-token-string-expression);">meta</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">name</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;viewport&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">content</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:var(--shiki-color-text);"> /&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     &lt;</span><span style="color:var(--shiki-token-string-expression);">title</span><span style="color:var(--shiki-color-text);">&gt;文件上传&lt;/</span><span style="color:var(--shiki-token-string-expression);">title</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;/</span><span style="color:var(--shiki-token-string-expression);">head</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">     &lt;</span><span style="color:var(--shiki-token-string-expression);">input</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">type</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;file&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">id</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;files&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onchange</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;fileChange()&quot;</span><span style="color:var(--shiki-color-text);"> /&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     &lt;</span><span style="color:var(--shiki-token-string-expression);">img</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">src</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">id</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;onImg&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">alt</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">width</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;200px&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">height</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;200px&quot;</span><span style="color:var(--shiki-color-text);"> /&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     &lt;</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">       function fileChange() {</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         var selecFile </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">document</span><span style="color:var(--shiki-token-function);">.querySelector</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;#files&quot;</span><span style="color:var(--shiki-color-text);">).files[</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">];</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         var onImg </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">document</span><span style="color:var(--shiki-token-function);">.querySelector</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;#onImg&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         var name </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">selecFile</span><span style="color:var(--shiki-color-text);">.name;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         var size </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">selecFile</span><span style="color:var(--shiki-color-text);">.size;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-constant);">console</span><span style="color:var(--shiki-token-function);">.log</span><span style="color:var(--shiki-color-text);">(name</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> size); </span><span style="color:var(--shiki-token-comment);">// 获得上传文件的名称和大小 可以根据项目进行判断， 如果上传的图片大小必须小于200kb</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-comment);">// 创建 FileReader 对象</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         var reader </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">FileReader</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-comment);">// 转化格式为base64输出</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-constant);">reader</span><span style="color:var(--shiki-token-function);">.readAsDataURL</span><span style="color:var(--shiki-color-text);">(selecFile);</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-comment);">// 把上传完毕的图片信息给到img标签进行渲染</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-constant);">reader</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-function);">onload</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> () {</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-constant);">onImg</span><span style="color:var(--shiki-color-text);">.src </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">.result;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">         };</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">       }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     &lt;/</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;/</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> &lt;/</span><span style="color:var(--shiki-token-string-expression);">html</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div></details></li><li><p><strong>websocket</strong></p><div class="tip custom-block"><p class="custom-block-title">介绍</p><p>websocket 是一种前后端通信技术，我们熟悉的前后端通信技术有 http/https 但是它 们的工作方式只能由<strong>客户端发起，服务端响应，响应结束后就断开（短链接）</strong>。而 websocket 技术可以让<strong>服务端主动发消息给客户端</strong>，并且浏览器和服务器只需要完 成一次握手，两者之间就直接可以创建<strong>持久性的连接</strong>，并进行双向数据传输。</p></div><details class="details custom-block"><summary>基本使用</summary><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki css-variables has-highlighted-lines"><code><span class="line"><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WebSocketTest</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-string-expression);">&quot;Websocket&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">in</span><span style="color:var(--shiki-color-text);"> window) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-function);">alert</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;您的浏览器支持 WebSocket!&quot;</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-keyword);">var</span><span style="color:var(--shiki-color-text);"> ws </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WebSocket</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;ws://localhost:9998/echo&quot;</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-constant);">ws</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-function);">onopen</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> () {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-comment);">// Web Socket 已连接上，使用 send() 方法发送数据</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-constant);">ws</span><span style="color:var(--shiki-token-function);">.send</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;发送数据&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-function);">alert</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;数据发送中...&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       }</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-constant);">ws</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-function);">onmessage</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> (e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-keyword);">var</span><span style="color:var(--shiki-color-text);"> received_msg </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-color-text);">.data;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-function);">alert</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;数据已接收...&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       }</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-constant);">ws</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-function);">onclose</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> () {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-comment);">// 关闭 websocket</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">           </span><span style="color:var(--shiki-token-function);">alert</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;连接已关闭...&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       };</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div></details></li></ol>`,12),r=[e];function i(p,c,k,h,y,v){return a(),n("div",null,r)}const d=s(l,[["render",i]]);export{u as __pageData,d as default};
