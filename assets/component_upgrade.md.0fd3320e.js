import{_ as s,c as n,o as a,a as o}from"./app.76ddcc44.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Vue 项目性能优化","slug":"vue-项目性能优化","link":"#vue-项目性能优化","children":[]}],"relativePath":"component/upgrade.md"}'),e={name:"component/upgrade.md"},r=o(`<h2 id="vue-项目性能优化" tabindex="-1">Vue 项目性能优化 <a class="header-anchor" href="#vue-项目性能优化" aria-hidden="true">#</a></h2><ul><li><p><strong>webpack 分包</strong></p><p>默认情况下，组件和组件之间时通过模块化直接依赖的，webpack 打包时会将组件打包到一个 app.js 文件里， 随着项目不断庞大，会造成首屏加载变慢。</p><p>对于没必要立即使用的组件，可以单独拆分成小的代码块 chunk.js，这些 chunk.js 会在需要时从服务器加载 下来，并运行代码。</p><p>方法：使用异步组件</p><details class="details custom-block"><summary>查看用法</summary><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki css-variables has-highlighted-lines"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">&lt;!--</span><span style="color:var(--shiki-color-text);"> defineAsyncComponent 接收两种类型的参数：</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            类型一：工厂函数，该工厂函数需要返回一个Promise对象</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            类型二：接收一个对象类型，对异步函数进行配置（不常用） </span><span style="color:var(--shiki-token-keyword);">--&gt;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> { defineAsyncComponent } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;vue&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// import()为异步函数，返回promise对象，而 defineAsyncComponent() 将promise对象转为组件</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">AsyncMore</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">defineAsyncComponent</span><span style="color:var(--shiki-color-text);">(()</span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;./view/More.vue&quot;</span><span style="color:var(--shiki-color-text);">))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">//正常导入</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> Home </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;./view/Home.vue&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> About </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;./view/About.vue&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">default</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    components</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      Home</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      About</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">      More</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> AsyncMore</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></details></li></ul>`,2),l=[r];function t(p,i,c,k,h,y){return a(),n("div",null,l)}const d=s(e,[["render",t]]);export{u as __pageData,d as default};
