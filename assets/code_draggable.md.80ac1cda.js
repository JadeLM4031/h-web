import{_ as s,c as a,o as n,a as t}from"./app.f8ac90c9.js";const y=JSON.parse('{"title":"Html5 新增属性 draggable","description":"","frontmatter":{},"headers":[{"level":2,"title":"拖动事件","slug":"拖动事件","link":"#拖动事件","children":[]},{"level":2,"title":"放置事件","slug":"放置事件","link":"#放置事件","children":[]},{"level":2,"title":"拖拽实现流程","slug":"拖拽实现流程","link":"#拖拽实现流程","children":[]}],"relativePath":"code/draggable.md"}'),o={name:"code/draggable.md"},e=t(`<h1 id="html5-新增属性-draggable" tabindex="-1">Html5 新增属性 draggable <a class="header-anchor" href="#html5-新增属性-draggable" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">draggable</p><p>全局属性 draggable 是一个枚举类型的属性，用于标识元素是否允许使用拖放操作拖动。</p></div><p>它的取值如下：</p><blockquote><p>true：表示元素可以被拖动。</p><p>false：表示元素不可以被拖动。</p></blockquote><p>带有属性 draggable 的可拖放元素可用的拖放事件 api 如下：</p><h2 id="拖动事件" tabindex="-1">拖动事件 <a class="header-anchor" href="#拖动事件" aria-hidden="true">#</a></h2><div class="vp-table__container"><table><thead><tr><th>事件</th><th>事件处理程序</th><th>触发时刻</th></tr></thead><tbody><tr><td>dragstart</td><td>ondragstart</td><td>当用户开始拖拽一个元素或选中的文本时触发（光标变为禁用）（常用，保存元素或数据）</td></tr><tr><td>drag</td><td>ondrag</td><td>当拖拽元素或选中的文本时触发。</td></tr><tr><td>dragend</td><td>ondragend</td><td>当拖拽操作结束时触发 (比如松开鼠标按键或敲“Esc”键)</td></tr></tbody></table></div><h2 id="放置事件" tabindex="-1">放置事件 <a class="header-anchor" href="#放置事件" aria-hidden="true">#</a></h2><div class="vp-table__container"><table><thead><tr><th>事件</th><th>事件处理程序</th><th>触发时刻</th></tr></thead><tbody><tr><td>dragenter</td><td>ondragenter</td><td>当拖拽元素或选中的文本到一个可释放目标时触发</td></tr><tr><td>dragover</td><td>ondragover</td><td>当元素或选中的文本被拖到一个可释放目标上时触发（每 100 毫秒触发一次）</td></tr><tr><td>dragleave</td><td>ondragleave</td><td>当拖拽元素或选中的文本离开一个可释放目标时触发。</td></tr><tr><td>drop</td><td>ondrop</td><td>当元素或选中的文本在可释放目标上被释放时触发，想要 ondrop 能正确触发，有时需要在前置 dragover 事件中禁用默认行为（常用，放置元素或取数据）</td></tr></tbody></table></div><p>每个 drag event 都有一个 dataTransfer 属性，其中保存着事件的数据。这个属性 （DataTransfer 对象）也有管理拖拽数据的方法。setData() 方法为拖拽数据添加一个项 ，其用法如下所示：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">dragstart_handler</span><span style="color:var(--shiki-color-text);">(ev) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// 添加拖拽数据，key 可以为任意字符串</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-constant);">ev</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">dataTransfer</span><span style="color:var(--shiki-token-function);">.setData</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;key&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;value&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">data</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ev</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">dataTransfer</span><span style="color:var(--shiki-token-function);">.getData</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;key&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span></code></pre></div><h2 id="拖拽实现流程" tabindex="-1">拖拽实现流程 <a class="header-anchor" href="#拖拽实现流程" aria-hidden="true">#</a></h2><p>设置两个角色，拖动 A 进入 B。</p><ol><li><p>拖动的元素要赋予 draggable 属性，属性值为 true</p></li><li><p>被拖进的元素要在 dragover 事件中阻止默认行为。(开始拖拽之后，光标变为禁用状态 ，当元素放入目标元素时，组织默认行为，光标取消禁用)</p><details class="details custom-block"><summary>查看伪代码</summary><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki css-variables has-highlighted-lines"><code><span class="line"><span style="color:var(--shiki-color-text);"> &lt;</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">draggable</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;true&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">id</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;Adiv&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">class</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;A&quot;</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     A---拖拽的元素</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;/</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">id</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;Bdiv&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">class</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;B&quot;</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     B---A被拖进的元素</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;/</span><span style="color:var(--shiki-token-string-expression);">div</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> &lt;/</span><span style="color:var(--shiki-token-string-expression);">body</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> &lt;</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">   Adiv.ondragstart = function(e){</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-comment);">// 保存数据或元素</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">dataTransfer</span><span style="color:var(--shiki-token-function);">.setData</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;key&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;value&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">   Bdiv.ondragover = function(e){</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-function);">.preventDefault</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;!-- 此时A元素可以拖入到B元素里面 --&gt;</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">   Bdiv.ondrop = function(e){</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-comment);">// 取数据或放置元素</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">     const data </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">dataTransfer</span><span style="color:var(--shiki-token-function);">.getData</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;key&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line highlighted"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> &lt;/</span><span style="color:var(--shiki-token-string-expression);">script</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details></li></ol>`,14),r=[e];function l(i,p,c,h,k,d){return n(),a("div",null,r)}const g=s(o,[["render",l]]);export{y as __pageData,g as default};
